---
- name: install docker repo key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: add docker apt repo
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    update_cache: true
  become: true

- name: install docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - cockpit-docker
    state: latest
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: install python3 venv and pip
  apt:
    name:
      - python3-pip
      - python3-venv
    state: latest
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: install docker-compose
  pip:
    name: docker-compose
    state: latest
    virtualenv: "/opt/virtualenv"
    virtualenv_command: /usr/bin/python3 -m venv
  become: true

- name: symlink docker-compose
  file:
    src: "/opt/virtualenv/bin/docker-compose"
    dest: "/usr/local/bin/docker-compose"
    state: link
    force: true
  become: true

- name: configure docker group
  group:
    name: docker
    state: present
  become: true

- name: add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  become: true
  notify: restart docker

- name: create caddyfile
  template:
    src: Caddyfile.j2
    dest: /etc/docker/Caddyfile
    lstrip_blocks: true
  become: true
  notify: restart caddy

- name: determine uid
  command: "id -u {{ ansible_user }}"
  register: uid

- name: determine gid
  command: "id -g {{ ansible_user }}"
  register: gid

- name: bind uid and gid to variables
  set_fact:
    uid: "{{ uid.stdout }}"
    gid: "{{ gid.stdout }}"

- name: create docker-compose file
  copy:
    content: "{{ docker_compose | to_nice_yaml }}"
    dest: /etc/docker/docker-compose.yaml
  become: true

- name: pull and run containers
  shell: |
    cd /etc/docker &&
    docker-compose pull && docker-compose up -d --no-deps --remove-orphans --build
  become: true

- name: increase number of watches
  sysctl:
    name: fs.inotify.max_user_watches
    value: "1048576"
    state: present
  become: true

- name: prune docker images
  shell: |
    docker image prune -af --filter="until=24h"
  become: true
