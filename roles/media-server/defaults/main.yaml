plex_claim: ""

docker_compose:
  services:
    plex:
      image: plexinc/pms-docker:plexpass
      container_name: plex
      networks:
        - apps
      ports:
        - 32400:32400
      volumes:
        - "{{ app_folder }}/plex:/config"
        - "{{ movies_folder }}:/data/movies:ro"
        - "{{ tv_folder }}:/data/tv:ro"
        - "{{ music_folder }}:/data/music:ro"
      tmpfs:
        - "/transcode"
      environment:
        - "PLEX_UID={{ uid }}"
        - "PLEX_GID={{ gid }}"
        - "TZ=America/Toronto"
        - "PLEX_CLAIM={{ plex_claim }}"
        - ADVERTISE_IP=http://{{ ansible_default_ipv4.address }}:32400/
      devices:
        - /dev/dri:/dev/dri
      restart: "no"
    tautulli:
      image: linuxserver/tautulli
      container_name: tautulli
      networks:
        - apps
      depends_on:
        - plex
      volumes:
        - "{{ app_folder }}/tautulli:/config"
        - "{{ app_folder }}/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro"
      restart: "no"
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    sonarr:
      image: linuxserver/sonarr
      container_name: sonarr
      networks:
        - apps
      depends_on:
        - jackett
      volumes:
        - "/etc/localtime:/etc/localtime:ro"
        - "{{ app_folder }}/sonarr:/config"
        - "{{ tv_folder }}:/tv"
        - "{{ downloads_folder }}:/downloads"
      restart: "no"
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    radarr:
      image: linuxserver/radarr
      container_name: radarr
      networks:
        - apps
      depends_on:
        - jackett
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - "{{ app_folder }}/radarr:/config"
        - "{{ movies_folder }}:/movies"
        - "{{ downloads_folder }}:/downloads"
      restart: "no"
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    jackett:
      image: linuxserver/jackett
      container_name: jackett
      networks:
        - apps
      volumes:
        - "{{ app_folder }}/jackett:/config"
      restart: "no"
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    deluge:
      container_name: deluge
      image: binhex/arch-delugevpn
      privileged: true
      sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
      cap_add:
        - NET_ADMIN
      networks:
        - apps
      volumes:
        - "/etc/localtime:/etc/localtime:ro"
        - "{{ app_folder }}/deluge:/config"
        - "{{ downloads_folder }}:/downloads"
      ports:  # https://github.com/binhex/arch-delugevpn/issues/139
        - 58846:58846
      environment:
        - "VPN_ENABLED=yes"
        - "VPN_PROV=pia"
        - "VPN_USER={{ pia_username }}"
        - "VPN_PASS={{ pia_password }}"
        - "VPN_CLIENT=wireguard"
        - "STRICT_PORT_FORWARD=yes"
        - "LAN_NETWORK={{ lan_network }}"
        - "NAME_SERVERS=8.8.8.8,8.8.4.4"
        - "DELUGE_DAEMON_LOG_LEVEL=info"
        - "DELUGE_WEB_LOG_LEVEL=info"
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "DEBUG=true"
        - "ADDITIONAL_PORTS=58846"

caddy:
  endpoints:
    radarr:
      type: proxy
      auth: oauth
      path: /radarr
      host: radarr
      port: 7878
      roles: ['admin']

    sonarr:
      type: proxy
      auth: oauth
      path: /sonarr
      host: sonarr
      port: 8989
      roles: ['admin']

    tautulli:
      type: proxy
      auth: oauth
      path: /tautulli
      host: tautulli
      port: 8181
      roles: ['admin']

    jackett:
      type: proxy
      auth: oauth
      path: /jackett
      host: jackett
      port: 9117
      roles: ['admin']

    deluge:
      type: proxy
      auth: basic
      user: "{{ web_user }}"
      password: "{{ web_password }}"
      path: /deluge
      host: deluge
      port: 8112
      strip_prefix: true
      header_up:
        - X-Deluge-Base "/deluge"
