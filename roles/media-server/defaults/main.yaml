cleanup_downloads_age: 120

docker_media_server:
  services:
    plex:
      image: plexinc/pms-docker:plexpass
      container_name: plex
      networks:
        - apps
      ports:
        - 32400:32400
      volumes:
        - "{{ app_folder }}/plex:/config"
      tmpfs:
        - "/transcode"
      environment:
        PLEX_UID: "{{ ansible_user_uid }}"
        PLEX_GID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
        ADVERTISE_IP: "http://{{ ansible_default_ipv4.address }}:32400/"
      devices:
        - /dev/dri:/dev/dri
      restart: "no"
    tautulli:
      image: linuxserver/tautulli
      container_name: tautulli
      networks:
        - apps
      depends_on:
        - plex
      volumes:
        - "{{ app_folder }}/tautulli:/config"
        - "{{ app_folder }}/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro"
      restart: "no"
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
    sonarr:
      image: linuxserver/sonarr:latest
      container_name: sonarr
      networks:
        - apps
      depends_on:
        - jackett
      volumes:
        - "/etc/localtime:/etc/localtime:ro"
        - "{{ app_folder }}/sonarr:/config"
        - "{{ tv_folder }}:/tv"
        - "{{ downloads_folder }}:/downloads"
      restart: "no"
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
    radarr:
      image: linuxserver/radarr
      container_name: radarr
      networks:
        - apps
      depends_on:
        - jackett
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - "{{ app_folder }}/radarr:/config"
        - "{{ movies_folder }}:/movies"
        - "{{ downloads_folder }}:/downloads"
      restart: "no"
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
        TZ: America/Toronto
    readarr:
      image: linuxserver/readarr:nightly
      container_name: readarr
      networks:
        - apps
      depends_on:
        - jackett
        - calibre
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - "{{ app_folder }}/readarr:/config"
        - "{{ downloads_folder }}:/downloads"
        - "{{ books_folder }}:/books"
        - "{{ audiobooks_folder }}:/audiobooks"
      restart: "no"
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
    bazarr:
      container_name: bazarr
      image: linuxserver/bazarr
      networks:
        - apps
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
      volumes:
        - "{{ app_folder }}/bazarr:/config"
        - "{{ tv_folder }}:/tv"
        - "{{ movies_folder }}:/movies"
      restart: "no"
    mylar3:
      image: linuxserver/mylar3
      container_name: mylar3
      networks:
        - apps
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
      volumes:
        - "{{ app_folder }}/mylar3:/config"
        - "{{ comics_folder }}:/comics"
        - "{{ downloads_folder }}:/downloads"
      ports:
        - 8090:8090
      restart: unless-stopped
    jackett:
      image: linuxserver/jackett
      container_name: jackett
      networks:
        - apps
      volumes:
        - "{{ app_folder }}/jackett:/config"
      restart: "no"
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
    deluge:
      container_name: deluge
      image: binhex/arch-delugevpn
      privileged: true
      sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
      cap_add:
        - NET_ADMIN
      networks:
        - apps
      volumes:
        - "/etc/localtime:/etc/localtime:ro"
        - "{{ app_folder }}/deluge:/config"
        - "{{ downloads_folder }}:/downloads"
      ports:
        - 58846:58846
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
        STRICT_PORT_FORWARD: "yes"
        LAN_NETWORK: "{{ lan_network }}"
        NAME_SERVERS: "8.8.8.8,8.8.4.4"
        DELUGE_DAEMON_LOG_LEVEL: info
        DELUGE_WEB_LOG_LEVEL: info
        DELUGE_ENABLE_WEBUI_PASSWORD: "no"
        VPN_ENABLED: "no"
    flaresolverr:
      container_name: flaresolverr
      image: flaresolverr/flaresolverr:latest
      networks:
        - apps
      environment:
        PUID: "{{ ansible_user_uid }}"
        PGID: "{{ ansible_user_gid }}"
        TZ: America/Toronto
        CAPTCHA_SOLVER: 'none'
      restart: "no"

upnp_forwards_media_server:
  plex: {from: 32400, to: 32400, proto: tcp}

caddy_media_server:
  endpoints:
    radarr:
      type: proxy
      auth: oauth
      path: /radarr
      host: radarr
      port: 7878
      role: admin

    readarr:
      type: proxy
      auth: oauth
      path: /readarr
      host: readarr
      port: 8787
      role: admin

    sonarr:
      type: proxy
      auth: oauth
      path: /sonarr
      host: sonarr
      port: 8989
      role: admin

    bazarr:
      type: proxy
      auth: oauth
      path: /bazarr
      host: bazarr
      port: 6767
      role: admin

    readarr:
      type: proxy
      auth: oauth
      path: /readarr
      host: readarr
      port: 8787
      role: admin

    mylar3:
      type: proxy
      auth: oauth
      path: /mylar
      host: mylar3
      port: 8090
      role: admin

    tautulli:
      type: proxy
      auth: oauth
      path: /tautulli
      host: tautulli
      port: 8181
      role: admin

    jackett:
      type: proxy
      auth: oauth
      path: /jackett
      host: jackett
      port: 9117
      role: admin

    deluge:
      type: proxy
      auth: basic
      user: "{{ web_user }}"
      password: "{{ web_password }}"
      path: /deluge
      host: deluge
      port: 8112
      strip_prefix: true
      header_up:
        - X-Deluge-Base "/deluge"
