---
docker_compose:
  version: '3.5'
  networks:
    media:
      name: media
  services:
    ddns:
      container_name: ddns
      image: sjmayotte/route53-dynamic-dns:latest
      networks:
        - media
      environment:
        - "AWS_ACCESS_KEY_ID={{ aws_access_key_id }}"
        - "AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}"
        - "AWS_REGION=us-east-1"
        - "ROUTE53_HOSTED_ZONE_ID={{ aws_ddns_hosted_zone }}"
        - "ROUTE53_DOMAIN={{ inventory_hostname }}"
        - "ROUTE53_TYPE=A"
        - "ROUTE53_TTL=300"
        - "UPDATE_FREQUENCY=60000"
        - "SEND_EMAIL_SES=true"
        - "SES_FROM_ADDRESS={{ ansible_email }}"
        - "SES_TO_ADDRESS={{ ansible_email }}"
    smtp:
      container_name: smtp
      image: namshi/smtp
      networks:
        - media
      environment:
        - "RELAY_NETWORKS=:10.0.0.0/8:172.16.0.0/12:192.168.0.0/16"
        - "GMAIL_USER={{ ansible_email }}"
        - "GMAIL_PASSWORD={{ gmail_access_key }}"
    caddy:
      build:
        args:
          plugins: login,jwt
        context: github.com/abiosoft/caddy-docker.git
      container_name: caddy
      networks:
        - media
      ports:
        - 80:80
        - 443:443
      restart: unless-stopped
      volumes:
        - /etc/docker/Caddyfile:/etc/Caddyfile:ro
        - "{{ app_folder }}/caddy:/root/.caddy"
        - "{{ media_folder }}:/srv/share:ro"
        - "{{ app_folder }}/caddy/log:/log"
    plex:
      image: plexinc/pms-docker:plexpass
      container_name: plex
      networks:
        - media
      ports:
        - 32400:32400
      volumes:
        - "{{ app_folder }}/plex:/config"
        - "{{ media_folder }}:/mnt/storage/share:ro"
      environment:
        - "PLEX_UID={{ uid }}"
        - "PLEX_GID={{ gid }}"
        - "TZ=America/Toronto"
        - ADVERTISE_IP=http://{{ ansible_default_ipv4.address }}:32400/
      restart: unless-stopped
    tautulli:
      image: linuxserver/tautulli
      container_name: tautulli
      networks:
        - media
      depends_on:
        - plex
      volumes:
        - "{{ app_folder }}/tautulli:/config"
        - "{{ app_folder }}/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro"
      restart: unless-stopped
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    sonarr:
      image: linuxserver/sonarr
      container_name: sonarr
      networks:
        - media
      depends_on:
        - jackett
      volumes:
        - "{{ app_folder }}/sonarr:/config"
        - "{{ backup_folder }}/apps/sonarr:/config/Backups"
        - "{{ media_folder }}/tv:/tv"
        - "{{ download_folder }}:/downloads"
        - "/etc/localtime:/etc/localtime:ro"
      restart: unless-stopped
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    radarr:
      image: linuxserver/radarr
      container_name: radarr
      networks:
        - media
      depends_on:
        - jackett
      volumes:
        - "{{ app_folder }}/radarr:/config"
        - "{{ backup_folder }}/apps/radarr:/config/Backups"
        - "{{ media_folder }}/movies:/movies"
        - "{{ download_folder }}:/downloads"
        - /etc/localtime:/etc/localtime:ro
      restart: unless-stopped
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    jackett:
      image: linuxserver/jackett
      container_name: jackett
      networks:
        - media
      volumes:
        - "{{ app_folder }}/jackett:/config"
      restart: unless-stopped
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    transmission:
      container_name: transmission
      image: haugene/transmission-openvpn:latest
      cap_add:
        - NET_ADMIN
      networks:
        - media
      dns:
        - 8.8.8.8
        - 1.1.1.1
      restart: unless-stopped
      volumes:
        - "{{ app_folder }}/transmission/config:/config"
        - "{{ app_folder }}/transmission/home:/data/transmission-home"
        - "{{ download_folder }}:/downloads"
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
        - "WEBPROXY_ENABLED=false"
        - "LOCAL_NETWORK=172.25.0.0/16"
        - "OPENVPN_PROVIDER=PIA"
        - "OPENVPN_CONFIG=CA\ Toronto"
        - "OPENVPN_USERNAME={{ pia_username }}"
        - "OPENVPN_PASSWORD={{ pia_password }}"
        - "CREATE_TUN_DEVICE=true"
        - "TRANSMISSION_INCOMPLETE_DIR_ENABLED=false"
        - "TRANSMISSION_WATCH_DIR=/downloads/watch"
        - "TRANSMISSION_DOWNLOAD_DIR=/downloads"
        - "TRANSMISSION_SCRIPT_TORRENT_DONE_ENABLED=true"
        - "TRANSMISSION_SCRIPT_TORRENT_DONE_FILENAME=/config/unpack.sh"
    resilio:
      image: linuxserver/resilio-sync
      container_name: resilio
      networks:
        - media
      ports:
        - 55555:55555
        - 55555:55555/udp
      volumes:
        - "{{ app_folder }}/resilio:/config"
        - "{{ data_folder }}:/sync"
      restart: unless-stopped
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
    watchtower:
      image: containrrr/watchtower
      container_name: watchtower
      networks:
        - media
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      restart: unless-stopped
    ombi:
      image: linuxserver/ombi
      container_name: ombi
      networks:
        - media
      environment:
        - "PUID={{ uid }}"
        - "PGID={{ gid }}"
        - "TZ=America/Toronto"
      volumes:
        - "{{ app_folder }}/ombi:/config"
      restart: unless-stopped

caddy:
  redirect: /dashboard
  endpoints:

  - type: proxy
    auth: oauth
    path: /radarr
    host: radarr
    port: 7878
    users: "{{ admin_users }}"

  - type: proxy
    auth: oauth
    path: /sonarr
    host: sonarr
    port: 8989
    users: "{{ admin_users }}"

  - type: proxy
    auth: oauth
    path: /radarr
    host: radarr
    port: 7878
    users: "{{ admin_users }}"

  - type: proxy
    auth: oauth
    path: /tautulli
    host: tautulli
    port: 8181
    users: "{{ admin_users }}"

  - type: proxy
    auth: oauth
    path: /jackett
    host: jackett
    port: 9117
    users: "{{ admin_users }}"

  - type: proxy
    auth: oauth
    path: /gui
    host: resilio
    port: 8888
    users: "{{ admin_users }}"

  - type: proxy
    auth: oauth
    path: /dashboard
    host: "{{ ansible_default_ipv4.address }}"
    port: 9090
    users: "{{ admin_users }}"

  - type: proxy
    auth: null
    path: /ombi
    host: ombi
    port: 3579
    users: "{{ admin_users + share_users }}"

  - type: proxy
    auth: basic
    path: /transmission
    host: transmission
    port: 9091

  - type: share
    auth: oauth
    path: /share
    users: "{{ admin_users + share_users }}"
