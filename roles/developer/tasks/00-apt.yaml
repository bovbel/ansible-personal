---
- name: install apt https
  apt:
    name: apt-transport-https
    state: latest
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: install repo keys from url
  apt_key:
    url: "{{ item.keyurl }}"
    state: present
  become: true
  with_items: "{{ apt_install }}"
  when: item.keyurl is defined

- name: install repo keys from keyserver
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: "{{ item.keyid }}"
    state: present
  become: true
  with_items: "{{ apt_install }}"
  when: item.keyid is defined

- name: add package repos
  apt_repository:
    repo: "{{ item.repo }}"
    filename: "{{ item.filename }}"
    state: present
    update_cache: false
  become: true
  with_items: "{{ apt_install }}"
  when: item.repo is defined

- name: update package cache
  apt:
    update_cache: true
  become: true

- name: upgrade existing packages
  apt:
    upgrade: dist
    force: true
  become: true

- name: remove packages
  apt:
    name: "{{ item.1 }}"
    state: absent
  become: true
  with_subelements:
    - "{{ apt_remove }}"
    - packages

- name: install new packages
  apt:
    name: "{{ item.1 }}"
    state: latest
    update_cache: true
    cache_valid_time: 3600
  become: true
  with_subelements:
    - "{{ apt_install }}"
    - packages

- name: install snap packages
  shell:
    snap install {{ item }}
  become: true
  with_items: "{{ snap_install }}"

- name: install python3 venv and pip
  apt:
    name:
      - python3-pip
      - python3-venv
    state: latest
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: install ansible
  pip:
    name: ansible
    state: latest
    virtualenv: "/opt/virtualenv"
    virtualenv_command: /usr/bin/python3 -m venv
  become: true

- name: symlink ansible
  file:
    src: "/opt/virtualenv/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: link
    force: true
  become: true
  with_items:
    - ansible
    - ansible-playbook
    - ansible-vault

  # TODO(pbovbel) configure vscode
