{
    email {{ ansible_email }}
}

(auth) {
  route /auth* {
    auth_portal {
      path /auth
      context {args.0}
      backends {
        google_oauth2_backend {
          method oauth2
          realm google
          provider google
          client_id {{ google_oauth2_client_id }}
          client_secret {{ google_oauth2_client_secret }}
          # scopes openid email profile
          scopes email
          {% for user in caddy.users %}
          user "{{ user.name }}" add roles {{ user.roles | join (" ") }}
          {% endfor %}
        }
      }
      jwt {
        token_name access_token
        token_secret {{ caddy.token_secret }}
      }
      ui {
        logo_url "https://caddyserver.com/resources/images/caddy-circle-lock.svg"
        logo_description "Caddy"
        links {
          "Share" /share/
        }
      }
    }
  }
}

127.0.0.1, localhost, {{ inventory_hostname }} {

{% if caddy.redirect is defined %}
  redir / {{ caddy.redirect }}
{% endif %}

  route / {
    jwt {
      primary yes
      auth_url /auth
      trusted_tokens {
        static_secret {
          token_name access_token
          token_secret {{ caddy.token_secret }}
        }
      }
    }
  }

  import auth

{% for endpoint in caddy.endpoints.values() %}
  redir {{ endpoint.path }} {{ endpoint.path }}/

  {% if endpoint.auth == "basic" %}
    basicauth {{ endpoint.path }}* {
      {{ endpoint.user }} {{ endpoint.password | password_hash('bcrypt') | b64encode }}
    }
  {% endif %}

  route {{ endpoint.path }}* {
  {% if endpoint.auth == "oauth" %}
    jwt {
      allow roles {{ endpoint.roles | join (' ') }}
    }
  {% endif %}

  {% if endpoint.type == "proxy" %}
    reverse_proxy * {{ endpoint.scheme | default('http') }}://{{ endpoint.host }}:{{ endpoint.port }}

  {% elif endpoint.type == "share" %}
    uri strip_prefix {{ endpoint.path }}
    root * {{ endpoint.path }}
    file_server browse
  {% endif %}
  }

{% endfor %}

}

{% for remote in caddy.remotes.values() %}

{{ remote.host }}.{{ remote.domain }} {

  {% if remote.auth == "basic" %}
  basicauth /* {
    {{ remote.user }} {{ remote.password | password_hash('bcrypt') | b64encode }}
  }
  {% endif %}

  route /* {

  {% if remote.auth == "oauth" %}
    jwt {
      primary yes
      context {{ remote.host }}
      auth_url /auth
      trusted_tokens {
        static_secret {
          token_name access_token
          token_secret {{ caddy.token_secret }}
        }
      }
      allow roles {{ remote.roles | join (' ') }}
    }
  {% endif %}
    reverse_proxy * {{ remote.scheme | default('http') }}://{{ remote.host }}:{{ remote.port }} {
      {% if remote.scheme | default('http') == "https" %}
      transport http {
        tls_insecure_skip_verify
      }
      {% endif %}
    }
  }

  import auth {{ remote.host }}
}

{% endfor %}
